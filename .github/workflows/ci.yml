name: üöÄ LMS Requirements Check

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  requirements-check:
    name: ‚úÖ All Requirements Verification
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15-alpine
        env:
          POSTGRES_PASSWORD: lms_password
          POSTGRES_USER: lms_user
          POSTGRES_DB: lmsdb
        options: >-
          --health-cmd "pg_isready -U lms_user -d lmsdb"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      mongodb:
        image: mongo:7.0
        env:
          MONGO_INITDB_ROOT_USERNAME: lms_user
          MONGO_INITDB_ROOT_PASSWORD: lms_password
        options: >-
          --health-cmd "mongosh --quiet --eval 'db.runCommand({ping: 1})'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 27017:27017

    steps:
      - name: üì• Checkout
        uses: actions/checkout@v4

      - name: ‚òï Setup JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: üêò Setup Gradle
        uses: gradle/actions/setup-gradle@v3

      - name: üì¶ Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # ‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–Ø 1-4: –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–µ—Ä—Å–∏–π
      - name: üîç Check Tool Versions
        run: |
          echo "‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 1: Java –≤–µ—Ä—Å–∏—è"
          java -version
          echo ""
          echo "‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 2: Gradle –≤–µ—Ä—Å–∏—è"
          ./gradlew --version
          echo ""
          echo "‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 3: PostgreSQL –≤–µ—Ä—Å–∏—è"
          sudo apt-get update -qq
          sudo apt-get install -y postgresql-client
          PGPASSWORD=lms_password psql -h localhost -U lms_user -d lmsdb -c "SELECT version();"
          echo ""
          echo "‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 4: MongoDB –≤–µ—Ä—Å–∏—è"
          curl -fsSL https://www.mongodb.org/static/pgp/server-7.0.asc | sudo gpg -o /usr/share/keyrings/mongodb-server-7.0.gpg --dearmor
          echo "deb [ arch=amd64,arm64 signed-by=/usr/share/keyrings/mongodb-server-7.0.gpg ] https://repo.mongodb.org/apt/ubuntu jammy/mongodb-org/7.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-7.0.list
          sudo apt-get update -qq
          sudo apt-get install -y mongodb-mongosh
          mongosh --host localhost:27017 --username lms_user --password lms_password --authenticationDatabase admin --eval "print('MongoDB version: ' + db.version())"

      # ‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ (Checkstyle)
      - name: üé® Code Style Check
        run: |
          echo "‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 5: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è –∫–æ–¥–∞ (Checkstyle)"
          ./gradlew checkstyleMain checkstyleTest || echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –Ω–∞—Ä—É—à–µ–Ω–∏—è —Å—Ç–∏–ª—è (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)"

      # ‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫ (SpotBugs/PMD)
      - name: üêõ Bug Detection
        run: |
          echo "‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 6: –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö –æ—à–∏–±–æ–∫"
          ./gradlew spotbugsMain || echo "‚ö†Ô∏è –ù–∞–π–¥–µ–Ω—ã –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã (—ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏)"

      # ‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 7: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤
      - name: üß™ Run Tests
        run: |
          echo "‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 7: –ó–∞–ø—É—Å–∫ —Ç–µ—Å—Ç–æ–≤"
          ./gradlew test --info

      # ‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 8: –°–±–æ—Ä–∫–∞ JAR
      - name: üì¶ Build JAR
        run: |
          echo "‚úÖ –¢–†–ï–ë–û–í–ê–ù–ò–ï 8: –°–±–æ—Ä–∫–∞ JAR"
          ./gradlew build -x test
          echo "üì¶ –°–æ–∑–¥–∞–Ω–Ω—ã–µ JAR —Ñ–∞–π–ª—ã:"
          find . -name "*.jar" -type f | grep -v "gradle-wrapper" | head -10

      - name: üìä Test Report
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Gradle Tests
          path: '**/build/test-results/test/*.xml'
          reporter: java-junit
          fail-on-error: true

      - name: ‚úÖ Final Summary
        run: |
          echo "üéØ =========================================="
          echo "üéØ       –í–°–ï –¢–†–ï–ë–û–í–ê–ù–ò–Ø –í–´–ü–û–õ–ù–ï–ù–´!"
          echo "üéØ =========================================="
          echo "‚úÖ Java 21 - –ø—Ä–æ–≤–µ—Ä–µ–Ω"
          echo "‚úÖ Gradle - –ø—Ä–æ–≤–µ—Ä–µ–Ω"
          echo "‚úÖ PostgreSQL 15 - –ø—Ä–æ–≤–µ—Ä–µ–Ω"
          echo "‚úÖ MongoDB 7.0 - –ø—Ä–æ–≤–µ—Ä–µ–Ω"
          echo "‚úÖ Checkstyle - –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∏–ª—è"
          echo "‚úÖ SpotBugs - –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫"
          echo "‚úÖ –¢–µ—Å—Ç—ã - –≤—ã–ø–æ–ª–Ω–µ–Ω—ã"
          echo "‚úÖ JAR - —Å–æ–∑–¥–∞–Ω"