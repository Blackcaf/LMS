plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.6'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'checkstyle'
    id 'com.github.spotbugs' version '6.0.27'
}

dependencies {
    // Spring Boot
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // DB driver
    runtimeOnly 'org.postgresql:postgresql'

    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'
    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'

    // Swagger / OpenAPI
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.6.0'

    // Logging
    implementation 'org.slf4j:slf4j-api:2.0.9'

    // dotenv support (опционально)
    implementation 'me.paulschwarz:spring-dotenv:4.0.0'

    // Tests
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    testImplementation 'com.h2database:h2'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.0'
    testImplementation 'org.testcontainers:postgresql:1.19.0'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Checkstyle configuration
checkstyle {
    toolVersion = '10.12.4'
    configFile = file("${rootProject.projectDir}/config/checkstyle/checkstyle.xml")
    ignoreFailures = true
}

// SpotBugs configuration
spotbugs {
    ignoreFailures = true
    effort = 'max'
    reportLevel = 'low'
}

tasks.withType(com.github.spotbugs.snom.SpotBugsTask) {
    reports {
        html.required = true
        xml.required = false
    }
}