# Базовый Dockerfile для микросервисов LMS
# Скопируйте этот файл в каждый сервис и переименуйте в Dockerfile

# Многоэтапная сборка
FROM maven:3.9-eclipse-temurin-21 AS build

# Устанавливаем рабочую директорию
WORKDIR /app

# Копируем родительский pom.xml
COPY ../../pom.xml ./pom.xml

# Копируем общие компоненты
COPY ../../shared ./shared

# Копируем pom.xml сервиса
COPY pom.xml ./service-pom.xml

# Устанавливаем зависимости
RUN mvn dependency:go-offline -B

# Копируем исходный код сервиса
COPY src ./src

# Собираем проект
RUN mvn clean package -DskipTests -f service-pom.xml

# Финальный образ для запуска
FROM eclipse-temurin:21-jre-jammy

# Обновляем пакеты и устанавливаем curl для health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Устанавливаем рабочую директорию
WORKDIR /app

# Создаем пользователя для безопасности
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Копируем jar файл из этапа сборки
COPY --from=build /app/target/*.jar app.jar

# Создаем директории и устанавливаем права
RUN mkdir -p logs && chown -R appuser:appuser /app

# Переключаемся на пользователя
USER appuser

# Открываем порт (измените на нужный для вашего сервиса)
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/actuator/health || exit 1

# Запускаем приложение с оптимизированными JVM параметрами
ENTRYPOINT ["java", "-Xmx512m", "-Xms256m", "-XX:+UseContainerSupport", "-jar", "app.jar"]



